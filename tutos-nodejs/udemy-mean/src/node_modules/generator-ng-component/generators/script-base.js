'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function () {
  var _this = this;

  this.argument('name', { type: String, required: false });

  this.lodash = _lodash2.default;

  var yoCheckPromise;

  // CI won't have yo installed
  if (!process.env.CI) {
    yoCheckPromise = runCmd('yo --version').then(function (stdout) {
      if (!_semver2.default.satisfies(_semver2.default.clean(stdout), '>= 1.7.1')) {
        throw new Error('ERROR: You need to update yo to at least 1.7.1 (npm i -g yo)');
      }
    });
  } else {
    yoCheckPromise = _bluebird2.default.resolve();
  }

  try {
    this.appname = require(_path2.default.join(process.cwd(), 'bower.json')).name;
  } catch (err) {
    this.appname = _path2.default.basename(process.cwd());
  }
  this.appname = _lodash2.default.slugify(_lodash2.default.humanize(this.appname));
  this.scriptAppName = this.config.get('moduleName') || _lodash2.default.camelize(this.appname) + (0, _util.appName)(this);

  this.cameledName = _lodash2.default.camelize(this.name);
  this.classedName = _lodash2.default.classify(this.name);
  this.kebabName = _lodash2.default.kebabCase(this.name);

  this.filters = this.config.get('filters');
  this.extensions = this.config.get('extensions');
  this.hasFilter = function (filter) {
    return _this.filters.indexOf(filter) !== -1;
  };
  this.hasExtension = function (ext) {
    return _this.extensions.indexOf(ext) !== -1;
  };

  this.scriptExt = this.hasExtension('ts') ? 'ts' : 'js';
  this.templateExt = this.hasExtension('pug') ? 'pug' : 'html';
  this.styleExt = this.hasExtension('sass') ? 'scss' : this.hasExtension('less') ? 'less' : this.hasExtension('stylus') ? 'styl' : 'css';

  // dynamic assertion statements
  this.expect = function () {
    return _this.hasFilter('expect') ? 'expect(' : '';
  };
  this.to = function () {
    return _this.hasFilter('expect') ? ').to' : '.should';
  };

  if (typeof this.env.options.appPath === 'undefined') {
    try {
      this.env.options.appPath = require(_path2.default.join(process.cwd(), 'bower.json')).appPath;
    } catch (err) {}
    this.env.options.appPath = this.env.options.appPath || 'app';
  }

  this.sourceRoot(_path2.default.join(__dirname, '..', '/templates'));

  return yoCheckPromise;
};

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _child_process = require('child_process');

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _underscore = require('underscore.string');

var _underscore2 = _interopRequireDefault(_underscore);

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

var _semver = require('semver');

var _semver2 = _interopRequireDefault(_semver);

var _util = require('./util.js');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// extend lodash with underscore.string
_lodash2.default.mixin(_underscore2.default.exports());

/**
 * Run the given command in a child process
 * @param {string} cmd - command to run
 * @returns {Promise}
 */
function runCmd(cmd) {
  return new _bluebird2.default(function (resolve, reject) {
    (0, _child_process.exec)(cmd, {}, function (err, stdout) {
      if (err) {
        console.error(stdout);
        return reject(err);
      }

      return resolve(stdout);
    });
  });
}